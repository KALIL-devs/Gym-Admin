// src/components/ClientList.jsx
import React, { useState, useMemo } from 'react';

// You can adjust this value as needed
const CLIENTS_PER_PAGE = 10; 

// --- ClientTableRow Component ---
// This replaces the ClientCard component
function ClientTableRow({ client, onClick }) {
Â  // Determine the status text color class
Â  const statusClass = 
Â  Â  client.status === 'active'
Â  Â  Â  ? 'bg-status-active/20 text-status-active'
Â  Â  Â  : client.status === 'expiring soon'
Â  Â  Â  ? 'bg-status-expiring/20 text-status-expiring'
Â  Â  Â  : 'bg-status-expired/20 text-status-expired';

Â  return (
Â  Â  <tr
Â  Â  Â  onClick={() => onClick(client)}
Â  Â  Â  // Tailwind classes for the row
Â  Â  Â  className="border-b border-dark-text-highlight/10 dark:border-light-text/10 
Â  Â  Â  Â  Â  Â  Â  Â  Â hover:bg-gray-800/50 dark:hover:bg-gray-200/50 transition-all cursor-pointer"
Â  Â  >
Â  Â  Â  {/* Roll No */}
Â  Â  Â  <td className="py-3 px-4 font-mono text-dark-accent dark:text-light-accent">
Â  Â  Â  Â  {client.rollno}
Â  Â  Â  </td>
Â  Â  Â  
Â  Â  Â  {/* Name */}
Â  Â  Â  <td className="py-3 px-4 font-semibold">
Â  Â  Â  Â  {client.name}
Â  Â  Â  </td>
Â  Â  Â  
Â  Â  Â  {/* Membership Type */}
Â  Â  Â  <td className="py-3 px-4 text-gray-400 dark:text-gray-500 hidden sm:table-cell">
Â  Â  Â  Â  {client.membershipType}
Â  Â  Â  </td>
      
      {/* ðŸŽ¯ NEW: End Date */}
Â  Â  Â  <td className="py-3 px-4 text-gray-400 dark:text-gray-500 hidden sm:table-cell">
Â  Â  Â  Â  {client.endDate} 
Â  Â  Â  </td>
Â  Â  Â  
Â  Â  Â  {/* Status */}
Â  Â  Â  <td className="py-3 px-4 text-right">
Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  className={`font-semibold uppercase text-xs px-3 py-1 rounded-full ${statusClass}`}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {client.status}
Â  Â  Â  Â  </span>
Â  Â  Â  </td>
Â  Â  </tr>
Â  );
}

// --- ClientList Component with Table and Pagination ---
function ClientList({ clients, onClientClick }) {
Â  // State for the current page number (starts at 1)
Â  const [currentPage, setCurrentPage] = useState(1);
Â  
Â  // Calculate total pages
Â  const totalPages = Math.ceil(clients.length / CLIENTS_PER_PAGE);

Â  // Calculate the subset of clients to display (same pagination logic)
Â  const paginatedClients = useMemo(() => {
Â  Â  const startIndex = (currentPage - 1) * CLIENTS_PER_PAGE;
Â  Â  const endIndex = startIndex + CLIENTS_PER_PAGE;
Â  Â  return clients.slice(startIndex, endIndex);
Â  }, [clients, currentPage]);

Â  // Handler functions for pagination buttons
Â  const goToNextPage = () => {
Â  Â  setCurrentPage(prevPage => Math.min(prevPage + 1, totalPages));
Â  };

Â  const goToPrevPage = () => {
Â  Â  setCurrentPage(prevPage => Math.max(prevPage - 1, 1));
Â  };

Â  if (clients.length === 0) {
Â  Â  return (
Â  Â  Â  <div className="text-center text-gray-500 dark:text-gray-400 p-8">
Â  Â  Â  Â  No clients found.
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className="flex flex-col gap-4 bg-dark-card dark:bg-light-card rounded-lg shadow-lg overflow-hidden">
Â  Â  Â  
Â  Â  Â  {/* --- Client Table --- */}
Â  Â  Â  <div className="overflow-x-auto">
Â  Â  Â  Â  <table className="min-w-full divide-y divide-dark-text-highlight/20 dark:divide-light-text/20">
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Table Header */}
Â  Â  Â  Â  Â  <thead className="bg-gray-900 dark:bg-gray-100 text-dark-text-highlight dark:text-light-text-highlight">
Â  Â  Â  Â  Â  Â  <tr>
Â  Â  Â  Â  Â  Â  Â  <th className="py-3 px-4 text-left text-xs font-medium uppercase tracking-wider">
Â  Â  Â  Â  Â  Â  Â  Â  Roll No
Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  <th className="py-3 px-4 text-left text-xs font-medium uppercase tracking-wider">
Â  Â  Â  Â  Â  Â  Â  Â  Name
Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  <th className="py-3 px-4 text-left text-xs font-medium uppercase tracking-wider hidden sm:table-cell">
Â  Â  Â  Â  Â  Â  Â  Â  Membership
Â  Â  Â  Â  Â  Â  Â  </th>
              {/* ðŸŽ¯ NEW: End Date Header */}
Â  Â  Â  Â  Â  Â  Â  <th className="py-3 px-4 text-left text-xs font-medium uppercase tracking-wider hidden sm:table-cell">
Â  Â  Â  Â  Â  Â  Â  Â  End Date
Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  <th className="py-3 px-4 text-right text-xs font-medium uppercase tracking-wider">
Â  Â  Â  Â  Â  Â  Â  Â  Status
Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  </thead>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Table Body */}
Â  Â  Â  Â  Â  <tbody className="divide-y divide-dark-text-highlight/5 dark:divide-light-text/5 text-dark-text dark:text-light-text">
Â  Â  Â  Â  Â  Â  {paginatedClients.map((client) => (
Â  Â  Â  Â  Â  Â  Â  <ClientTableRow key={client.uid} client={client} onClick={onClientClick} />
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </tbody>
Â  Â  Â  Â  </table>
Â  Â  Â  </div>

Â  Â  Â  {/* --- Pagination Controls (Same as before) --- */}
Â  Â  Â  {totalPages > 1 && (
Â  Â  Â  Â  <div className="flex justify-between items-center px-4 py-3 border-t border-dark-text-highlight/20 dark:border-light-text/20">
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Previous Button */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={goToPrevPage}
Â  Â  Â  Â  Â  Â  disabled={currentPage === 1}
Â  Â  Â  Â  Â  Â  className="px-4 py-2 text-dark-accent dark:text-light-accent font-semibold rounded-md transition-colors 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â disabled:opacity-50 disabled:cursor-not-allowed hover:bg-dark-text-highlight/10 dark:hover:bg-light-text/10"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  &larr; Previous
Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  {/* Page Info */}
Â  Â  Â  Â  Â  <span className="text-dark-text dark:text-light-text text-sm">
Â  Â  Â  Â  Â  Â  Page <b className="text-dark-accent dark:text-light-accent">{currentPage}</b> of <b>{totalPages}</b>
Â  Â  Â  Â  Â  </span>

Â  Â  Â  Â  Â  {/* Next Button */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={goToNextPage}
Â  Â  Â  Â  Â  Â  disabled={currentPage === totalPages}
Â  Â  Â  Â  Â  Â  className="px-4 py-2 text-dark-accent dark:text-light-accent font-semibold rounded-md transition-colors
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â disabled:opacity-50 disabled:cursor-not-allowed hover:bg-dark-text-highlight/10 dark:hover:bg-light-text/10"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Next &rarr;
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  )}
Â  Â  </div>
Â  );
}

export default ClientList;